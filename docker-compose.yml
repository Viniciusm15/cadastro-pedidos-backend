version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: SenhaForte@123
      POSTGRES_DB: OrderRegistration
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d OrderRegistration"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G

  web:
    build:
      context: .
      dockerfile: Web/Dockerfile
    container_name: webapp
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__DefaultConnection: "Host=db;Database=OrderRegistration;Username=admin;Password=SenhaForte@123"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G

volumes:
  postgres-data: